setwd("F:\github/r/Predict-Risk-of-Credit")
setwd("F:/github/r/Predict-Risk-of-Credit")
getwd()
ds<- data.frame(read.csv("credit.csv",header =TRUE))
View(ds)
# 01 - Searching Directory
setwd("F:/github/r/Predict-Risk-of-Credit")
getwd()
# 02 - Coleting the dataset
ds<- data.frame(read.csv("credit.csv",header =TRUE))
View(ds)
#03 - checking dimension
dim(ds)
setwd("F:/github/r/Predict-Risk-of-Credit")
getwd()
# 02 - Coleting the dataset
ds<- data.frame(read.csv("credit.csv",header =TRUE))
View(ds)
#03 - checking dimension
dim(ds)
#04 - Checking type of data
str(ds)
#05 - name the columns
colnames(ds)<- c("CheckingAcctStat","Duration", "CreditHistory","Purpose",
"CreditAmount","SavingsBonds","Employment", "InstallmentRatePecnt",
"SexAndStatus", "OtherDetorsGuarantors","PresentResidenceTime",
"Property","Age","OtherInstallments","Housing","ExistingCreditsAtBank",
"Job","NumberDependents","Telephone","ForeignWorker", "CreditStatus")
View(ds)
dim(ds)
str(ds)
df<- data.frame(ds,stringsAsFactors = TRUE))
df<- data.frame(ds,stringsAsFactors = TRUE)
View(ds)
dim(ds)
str(ds)
df<- data.frame(ds,stringsAsFactors = TRUE)
View(df)
dim(df)
str(df)
df<- data.frame(ds,stringsAsFactors=TRUE)
dim(df)
str(df)
type(df)
typeof(df)
df<- data.frame(ds,stringsAsFactors = TRUE)
typeof(df)
v1 = c(1001, 1002, 1003, 1004, 1005)
v2 = c(0, 1, 1, 0, 2)
v3 = c('Verde','Laranja','Azul','Laranja','Verde')
v1 = c(1001, 1002, 1003, 1004, 1005)
v2 = c(0, 1, 1, 0, 2)
v3 = c('Verde','Laranja','Azul','Laranja','Verde')
df = data.frame(v1,v2,v3)
v1 = c(1001, 1002, 1003, 1004, 1005)
v2 = c(0, 1, 1, 0, 2)
v3 = c('Verde','Laranja','Azul','Laranja','Verde')
dp = data.frame(v1,v2,v3)
#unindo vetores com dataframe
v1 = c(1001, 1002, 1003, 1004, 1005)
typeof(dp)
dp = as.data.frame(v1,v2,v3)
ds<- data.frame(read.csv("credit.csv",header =TRUE, stringsAsFactors = TRUE))
str(ds)
dim(ds)
str(ds)
ds<- data.frame(read.csv("credit.csv",header =TRUE, stringsAsFactors = TRUE))
View(ds)
#03 - checking dimension
dim(ds)
#04 - name the columns
colnames(ds)<- c("CheckingAcctStat","Duration", "CreditHistory","Purpose",
"CreditAmount","SavingsBonds","Employment", "InstallmentRatePecnt",
"SexAndStatus", "OtherDetorsGuarantors","PresentResidenceTime",
"Property","Age","OtherInstallments","Housing","ExistingCreditsAtBank",
"Job","NumberDependents","Telephone","ForeignWorker", "CreditStatus")
#05 - general information
dim(ds)
str(ds)
View(ds)
table(ds$CreditStatus)
prop.table(ds$CreditStatus)
table(ds$CreditStatus)
fr<- prop.table(ds$CreditStatus)
fr
fa<- table(ds$CreditStatus)
fr<- prop.table(fa)
fr
fr<- (prop.table(fa))*100
fr
fr<- round((prop.table(fa))*100)
fr
barplot(fr)
barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"))
text(x=c(graphbar), y=x, labels=x, pos=3)
graphbar <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"))
text(x=c(graphbar), y=x, labels=x, pos=3)
graphbar <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"))
text(x=c(graphbar), y=fr, labels=fr, pos=3)
graphbar <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.1))
text(x=c(graphbar), y=fr, labels=fr, pos=3)
box()
graphbar <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*3))
text(x=c(graphbar), y=fr, labels=fr, pos=3)
box()
graphbar <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"))
text(x=c(graphbar), y=fr, labels=fr, pos=3)
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"))
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",
col=c("seagreen", "yellowgreen"),labels=fr)
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"))
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.1))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*2))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.5))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.2))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*0.5))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*0.3))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*0.4))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*0.5))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
frequencygraph <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim))
text(x=c(frequencygraph), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.1))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
# 01 - Searching Directory
setwd("F:/github/r/Predict-Risk-of-Credit")
getwd()
# 02 - Coleting the dataset
ds<- data.frame(read.csv("credit.csv",header =TRUE, stringsAsFactors = TRUE))
View(ds)
#03 - checking dimension
dim(ds)
#04 - name the columns
colnames(ds)<- c("CheckingAcctStat","Duration", "CreditHistory","Purpose",
"CreditAmount","SavingsBonds","Employment", "InstallmentRatePecnt",
"SexAndStatus", "OtherDetorsGuarantors","PresentResidenceTime",
"Property","Age","OtherInstallments","Housing","ExistingCreditsAtBank",
"Job","NumberDependents","Telephone","ForeignWorker", "CreditStatus")
#05 - general information
dim(ds)
str(ds)
#06 - Distribution of target variable
#absolute frequency
fa<- table(ds$CreditStatus)
#relative frequency
fr<- round((prop.table(fa))*100)
fr
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
ylim=c(0, lim*1.1))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)")
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)",ylim=c(0, lim*1.1))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
x1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)",ylim=c(0, lim*1.15))
text(x=c(x1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
graph_1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Absolute Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)",ylim=c(0, lim*1.15))
text(x=c(graph_1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
graph_1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Relative Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)",ylim=c(0, lim*1.15))
text(x=c(graph_1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
setwd("F:/bigdatarazure/cap17")
getwd()
ds<- read.csv("dado.xlsx")
library(readxl)
dado <- read_excel("dado.xlsx")
View(dado)
dim(dado)
ds<- read.csv("dataset.csv")
View(ds)
dim(ds)
summary(ds)
str(ds)
cpt<- sum(complete.cases(ds))
cpt
icp<- sum(!complete.cases(ds))
icp
por<- (icp/cpt)*100
por
por<- round((icp/cpt)*100)
por
rm(cpt)
rm(icp)
colnames(ds)
newcol<- colnames(ds)
newcol
newcol[1] <- "NomePais"
newcol[2] <- "Ano"
newcol[3] <- "IndicadorNivelVida"
newcol[4] <- "PIB_Per_Capita"
newcol[5] <- "SuporteSocial"
newcol[6] <- "ExpectativaVida"
newcol[7] <- "IndicadorLiberdade"
newcol[8] <- "IndicadorGenerosidade"
newcol[9] <- "IndicadorCorrupcao"
newcol[10] <- "IndicadorEmocoesPositivas"
newcol[11] <- "IndicadorEmocoesNegativas"
newcol
View(ds)
newcol<- colnames(ds)
newcol[1] <- "NomePais"
newcol[2] <- "Ano"
newcol[3] <- "IndicadorNivelVida"
newcol[4] <- "PIB_Per_Capita"
newcol[5] <- "SuporteSocial"
newcol[6] <- "ExpectativaVida"
newcol[7] <- "IndicadorLiberdade"
newcol[8] <- "IndicadorGenerosidade"
newcol[9] <- "IndicadorCorrupcao"
newcol[10] <- "IndicadorEmocoesPositivas"
newcol[11] <- "IndicadorEmocoesNegativas"
newcol
View(ds)
colnames(ds)<- newcol
View(ds)
lenght(unique(ds$NomePais))
length(unique(ds$NomePais))
listapaises<- unique(ds$NomePais)
listapaises
ds1<- na.omit(ds)
dim(ds1)
lstp1<length(unique(ds$NomePais))
lstp1<-length(unique(ds$NomePais))
lstp1
setdiff(listapaises,lstp1)
length(unique(ds$NomePais))
lstp1<-length(unique(ds$NomePais))
lstp1
lstp1<-length(unique(ds1$NomePais))
lstp1
setdiff(listapaises,lstp1)
lstp1<-length(unique(ds1$NomePais))
lstp1
setdiff(listapaises,lstp1)
length(unique(ds$NomePais))
legth(unique(ds1$NomePais))
length(unique(ds1$NomePais))
lstp1<-length(unique(ds1$NomePais))
lstp1
length(unique(ds$NomePais))
x<- unique(ds$NomePais)
x
ds1<- na.omit(ds)
dim(ds1)
length(unique(ds1$NomePais))
y<-length(unique(ds1$NomePais))
y
setdiff(x,y)
y<-unique(ds1$NomePais)
y
setdiff(x,y)
ano<- unique(ds1$Ano)
ano
nanos<- length(unique(ds1$Ano))
nanos
table(ds1$Ano)
ds2<- ds1[ds1$Ano!=2005 & ds1$Ano!=2020 & ds1$Ano!=2006 & ds1$Ano!=2007]
ds2<- ds1[ds1$Ano!=2005 & ds1$Ano!=2020 & ds1$Ano!=2006 & ds1$Ano!=2007,]
ds2<- ds1[ds1$Ano!=2005 & ds1$Ano!=2020 & ds1$Ano!=2006 & ds1$Ano!=2007,]
unique(ds2$Ano)
lenght(unique(ds2$Ano))
length(unique(ds2$Ano))
table(ds2$Ano)
View(ds2)
ds3<- sapply(ds2,is.numeric)
View(ds3)
vnum<- sapply(ds2,is.numeric)
ds3<- ds2[vnum]
View(ds3)
cob<- cor(ds3)
cob
corrplot(cob,method="color")
library(corrplot)
corrplot(cob,method="color")
pairs(ds3[1:5],labels=colnames(ds3)[1:5])
pairs(ds3[1:5],labels=colnames(ds3)[1:5],diag.panel = panel.hist)
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(ds3[1:5],labels=colnames(ds3)[1:5],diag.panel = panel.hist)
pairs(ds3[1:5],labels=colnames(ds3)[1:5],diag.panel = panel.hist,upper.panel = panel.cor)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(ds3[1:5],labels=colnames(ds3)[1:5],diag.panel = panel.hist,upper.panel = panel.cor)
library(dplyr)
colnames(ds2)
mpib<- ds2 %>%
group_by(NomePais) %>%
summarize(mpib=mean(PIB_Per_Capita))
msup<- ds2 %>%
group_by(NomePais) %>%
summarize(msup=mean(SuporteSocial))
mvida<- ds2 %>%
group_by(NomePais) %>%
summarize(mvida=mean(IndicadorNivelVida))
mlib<- ds2 %>%
group_by(NomePais) %>%
summarize(mlib=mean(IndicadorLiberdade))
mcor<- ds2 %>%
group_by(NomePais) %>%
summarize(mcor=mean(IndicadorCorrupcao))
mneg<- ds2 %>%
group_by(NomePais) %>%
summarize(mneg=mean(IndicadorEmocoesNegativas))
summarize(mneg=mean(IndicadorEmocoesNegativas))
mexp<- ds2 %>%
group_by(NomePais) %>%
summarize(mexp=mean(ExpectativaVida))
summarize(mexp=mean(ExpectativaVida))
mgen<- ds2 %>%
group_by(NomePais) %>%
summarize(mgen=mean(IndicadorGenerosidade))
mpos<- ds2 %>%
group_by(NomePais) %>%
summarize(mpos=mean(IndicadorEmocoesPositivas))
mdf<- merge(mpib,msup,mvida,mlib,mcor,mneg,mexp,mgen,mpos)
mdf<- merge(mpib,msup)
View(mdf)
?merge
mdf<- reduce(merge,list(mpib,msup,mvida,mlib,mcor,mneg,mexp,mgen,mpos))
mdf<- Reduce(merge,list(mpib,msup,mvida,mlib,mcor,mneg,mexp,mgen,mpos))
View(mdf)
plot(mdf$mpib,mdf$mexp)
cor.test(mdf$mpib,mdf$mexp)
round(cor.test(mdf$mpib,mdf$mexp),1)
# 01 - Searching Directory
setwd("F:/github/r/Predict-Risk-of-Credit")
getwd()
# 02 - Coleting the dataset
ds<- data.frame(read.csv("credit.csv",header =TRUE, stringsAsFactors = TRUE))
View(ds)
#03 - checking dimension
dim(ds)
#04 - name the columns
colnames(ds)<- c("CheckingAcctStat","Duration", "CreditHistory","Purpose",
"CreditAmount","SavingsBonds","Employment", "InstallmentRatePecnt",
"SexAndStatus", "OtherDetorsGuarantors","PresentResidenceTime",
"Property","Age","OtherInstallments","Housing","ExistingCreditsAtBank",
"Job","NumberDependents","Telephone","ForeignWorker", "CreditStatus")
#05 - general information
dim(ds)
str(ds)
#06 - Distribution of target variable
#absolute frequency
fa<- table(ds$CreditStatus)
#relative frequency
fr<- round((prop.table(fa))*100)
fr
#barplot
graph_1 <- barplot(fr, xlab="Credit Status (Target Variable)",
ylab="Relative Frequency",col=c("seagreen", "yellowgreen"),
main="Frequency(%)",ylim=c(0, lim*1.15))
text(x=c(graph_1), y=fr, labels=fr, pos=3)
lim <- par()$usr[4]
box()
#When we performing Classification,we have to make sure that
#there is a balance in the the distribution of each class,
#otherwise it impacts the Machine Learning algorithms ability to learn all the classe.
#As shown at the graph graph_1 _Frequency of target variable,
#we have the class are unbalanced. Therefore, it will be necessary fix it
install.packages('DMwR')
library(DMwR)
# Estudo Dirigido - Balanceamento de Classes em Dados de Fraudes Financeiras com ROSE (Random OverSampling Examples)
# Todos os detalhes sobre este trabalho de anÃ¡lise, incluindo a definiÃ§Ã£o do problema e link para download do dataset,
# estÃ£o no manual em pdf do Estudo Dirigido no CapÃ­tulo 11 do Curso:
# Big Data Analytics com R e Microsoft Azure Machine Learning, VersÃ£o 2.0
# Definindo o diretÃ³rio de trabalho
getwd()
setwd("~/Dropbox/DSA/BigDataAnalytics-R-Azure2.0/Cap11/EstudoDirigido")
# Pacotes (se algum pacote nÃ£o estiver instalado na sua mÃ¡quina, Ã© simples: instale o pacote!)
install.packages("data.table")
install.packages("C50")
